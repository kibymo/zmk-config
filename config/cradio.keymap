// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro good

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &kp k2  &lt 2 k3  &lt 1 k4
#define HRMR(k1,k2,k3,k4) &lt 1 k1  &lt 2 k2  &kp k3  &ht RSHFT k4

#//#define HRML(k1,k2,k3,k4,k5) &ht LSHFT k1  &ht LCTRL k2  &ht LALT k3  &ht LGUI k4 &lt 2 k5
#//#define HRMR(k1,k2,k3,k4,k5) &lt 2 k1 &ht RGUI k2  &ht RALT k3  &ht RCTRL k4  &ht RSHFT k5
#define HRML3(k1,k2,k3) &ht LCTRL k1  &ht LALT k2  &ht LGUI k3
#define HRMR3(k1,k2,k3) &ht RGUI k1  &ht RALT k2  &ht RCTRL k3

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };
    };

    //    conditional_layers {
    //        compatible = "zmk,conditional-layers";
    //        tri_layer {
    //            if-layers = <1 2>;
    //            then-layer = <3>;
    //        };
    //    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp ENTER>;
        };

        combo_tog3 {
            timeout-ms = <50>;
            key-positions = <7 27>;
            bindings = <&tog 3>;
        };

        combo_under {
            bindings = <&kp UNDER>;
            key-positions = <5 6>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
        };

        combo_colon {
            bindings = <&kp COLON>;
            key-positions = <7 8>;
        };

        combo_semi {
            bindings = <&kp SEMI>;
            key-positions = <17 18>;
        };

        combo_dqt {
            bindings = <&kp DQT>;
            key-positions = <8 9>;
        };

        combo_sqt {
            bindings = <&kp SQT>;
            key-positions = <18 19>;
        };

        combo_pipe {
            bindings = <&kp PIPE>;
            key-positions = <19 9>;
        };

        combo_qmark {
            bindings = <&kp QMARK>;
            key-positions = <19 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W           &kp F       &kp P      &kp B        &kp J      &kp L      &kp U                &kp Y                 &kp BSPC
&ht LEFT_SHIFT A  &kp R           &kp S       &lt 1 T    &kp G        &kp M      &lt 1 N    &kp E                &kp I                 &ht RSHFT O
&ht LCTRL Z       &ht LEFT_ALT X  &ht LGUI C  &kp D      &kp V        &kp K      &kp H      &ht RIGHT_GUI COMMA  &ht RIGHT_ALT PERIOD  &ht RCTRL SLASH
                                              &lt 2 ESC  &kp SPACE    &kp ENTER  &lt 3 TAB
            >;
        };

        right_layer {
            bindings = <
&kp TILDE  &kp EXCL   &kp AT     &kp POUND  &kp DLLR    &kp UNDER  &kp PLUS   &kp COLON  &kp DQT  &kp PIPE
&kp GRAVE  &kp PRCNT  &kp CARET  &kp AMPS   &kp STAR    &kp MINUS  &kp EQUAL  &kp SEMI   &kp SQT  &kp BSLH
&kp BSPC   &kp LBRC   &kp RBRC   &kp LPAR   &kp RPAR    &kp LBKT   &kp RBKT   &kp LT     &kp GT   &kp QMARK
                                 &trans     &trans      &trans     &trans
            >;
        };

        left_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4    &trans  &kp N7  &kp N8  &kp N9  &trans
&trans  &kp N5  &kp N6  &kp N7  &kp N8    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans  &kp N9  &kp N0    &trans  &kp N1  &kp N2  &kp N3  &kp DOT
                        &trans  &trans    &trans  &kp N0
            >;
        };

        tri_layer {
            bindings = <
&bt BT_SEL 0  &kp F1  &kp F2   &kp F3   &kp F4     &kp DOWN  &kp RIGHT  &kp PG_UP  &kp HOME   &kp PSCRN
&bt BT_SEL 1  &kp F5  &kp F6   &kp F7   &kp F8     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS
&bt BT_SEL 2  &kp F9  &kp F10  &kp F11  &kp F12    &kp UP    &kp LEFT   &kp PG_DN  &kp END    &kp DEL
                               &trans   &trans     &trans    &trans
            >;
        };
    };
};
