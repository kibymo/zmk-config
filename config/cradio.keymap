// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro good

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &kp k2  &lt 2 k3  &lt 1 k4
#define HRMR(k1,k2,k3,k4) &lt 1 k1  &lt 2 k2  &kp k3  &ht RSHFT k4

#//#define HRML(k1,k2,k3,k4,k5) &ht LSHFT k1  &ht LCTRL k2  &ht LALT k3  &ht LGUI k4 &lt 2 k5
#//#define HRMR(k1,k2,k3,k4,k5) &lt 2 k1 &ht RGUI k2  &ht RALT k3  &ht RCTRL k4  &ht RSHFT k5
#define HRML3(k1,k2,k3) &ht LCTRL k1  &ht LALT k2  &ht LGUI k3
#define HRMR3(k1,k2,k3) &ht RGUI k1  &ht RALT k2  &ht RCTRL k3

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        caps_word: caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE BACKSPACE DELETE>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };
    };

    //    conditional_layers {
    //        compatible = "zmk,conditional-layers";
    //        tri_layer {
    //            if-layers = <1 2>;
    //            then-layer = <3>;
    //        };
    //    };

    combos {
        compatible = "zmk,combos";

        combo_enter {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };

        combo_tog3 {
            timeout-ms = <50>;
            key-positions = <6 8>;
            bindings = <&tog 3>;
        };

        combo_under {
            bindings = <&kp UNDER>;
            key-positions = <5 6>;
            timeout-ms = <50>;
        };

        combo_minus {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        combo_plus {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        combo_equal {
            bindings = <&kp SQT>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        combo_colon {
            bindings = <&kp COLON>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };

        combo_semi {
            bindings = <&kp SEMICOLON>;
            key-positions = <17 18>;
            timeout-ms = <50>;
        };

        combo_dqt {
            bindings = <&kp PLUS>;
            key-positions = <8 9>;
            timeout-ms = <50>;
        };

        combo_sqt {
            bindings = <&kp EQUAL>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        combo_pipe {
            bindings = <&kp PIPE>;
            key-positions = <19 9>;
            timeout-ms = <50>;
        };

        combo_qmark {
            bindings = <&kp BSLH>;
            key-positions = <19 29>;
            timeout-ms = <50>;
        };

        combo_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <25 26>;
            timeout-ms = <50>;
        };

        combo_rbkt {
            bindings = <&kp RBKT>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <0 10>;
            timeout-ms = <50>;
        };

        combo_grave {
            bindings = <&kp GRAVE>;
            key-positions = <10 20>;
            timeout-ms = <50>;
        };

        combo_excl {
            bindings = <&kp EXCL>;
            key-positions = <1 0>;
            timeout-ms = <50>;
        };

        combo_percent {
            bindings = <&kp PERCENT>;
            key-positions = <10 11>;
            timeout-ms = <50>;
        };

        combo_at {
            bindings = <&kp AT>;
            key-positions = <1 2>;
            timeout-ms = <50>;
        };

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <11 12>;
            timeout-ms = <50>;
        };

        combo_hash {
            bindings = <&kp HASH>;
            key-positions = <2 3>;
            timeout-ms = <50>;
        };

        combo_amps {
            bindings = <&kp AMPS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        combo_dllr {
            bindings = <&kp DLLR>;
            key-positions = <3 4>;
            timeout-ms = <50>;
        };

        combo_astrk {
            bindings = <&kp ASTRK>;
            key-positions = <13 14>;
            timeout-ms = <50>;
        };

        combo_lbrc {
            bindings = <&kp LBRC>;
            key-positions = <20 21>;
            timeout-ms = <50>;
        };

        combo_rbrc {
            bindings = <&kp RBRC>;
            key-positions = <21 22>;
            timeout-ms = <50>;
        };

        combo_lpar {
            bindings = <&kp LPAR>;
            key-positions = <22 23>;
            timeout-ms = <50>;
        };

        combo_rpar {
            bindings = <&kp RPAR>;
            key-positions = <24 23>;
            timeout-ms = <50>;
        };

        combo_n1 {
            bindings = <&kp N1>;
            key-positions = <26 16>;
            timeout-ms = <50>;
        };

        combo_n2 {
            bindings = <&kp N2>;
            key-positions = <27 17>;
            timeout-ms = <50>;
        };

        combo_n3 {
            bindings = <&kp N3>;
            key-positions = <28 18>;
            timeout-ms = <50>;
        };

        combo_n4 {
            bindings = <&kp N4>;
            key-positions = <16 6>;
            timeout-ms = <50>;
        };

        combo_n5 {
            bindings = <&kp N5>;
            key-positions = <17 7>;
            timeout-ms = <50>;
        };

        combo_n6 {
            bindings = <&kp N6>;
            key-positions = <18 8>;
            timeout-ms = <50>;
        };

        combo_n7 {
            bindings = <&kp N7>;
            key-positions = <26 6>;
            timeout-ms = <50>;
        };

        combo_n8 {
            bindings = <&kp N8>;
            key-positions = <27 7>;
            timeout-ms = <50>;
        };

        combo_n9 {
            bindings = <&kp N9>;
            key-positions = <28 8>;
            timeout-ms = <50>;
        };

        combo_n0 {
            bindings = <&kp N0>;
            key-positions = <26 8>;
            timeout-ms = <50>;
        };

        combo_del {
            bindings = <&kp DEL>;
            key-positions = <29 28>;
            timeout-ms = <50>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <20 30>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W  &kp F  &kp P             &kp B          &kp J      &kp L              &kp U      &kp Y       &kp BSPC
&ht LALT A   &kp R  &kp S  &ht LEFT_SHIFT T  &kp G          &kp M      &ht RIGHT_SHIFT N  &kp E      &kp I       &ht RALT O
&ht LCTRL Z  &kp X  &kp C  &ht LEFT_GUI D    &kp V          &kp K      &ht RIGHT_GUI H    &kp COMMA  &kp PERIOD  &ht RCTRL SLASH
                           &lt 1 ESC         &lt 2 SPACE    &kp ENTER  &lt 3 TAB
            >;
        };

        right_layer {
            bindings = <
&kp TILDE   &kp EXCL   &kp AT     &kp POUND  &kp DLLR    &kp UNDER  &kp DOUBLE_QUOTES  &kp COLON      &kp PLUS   &kp PIPE
&kp GRAVE   &kp PRCNT  &kp CARET  &kp AMPS   &kp STAR    &kp MINUS  &kp SQT            &kp SEMICOLON  &kp EQUAL  &kp BSLH
&caps_word  &kp LBRC   &kp RBRC   &kp LPAR   &kp RPAR    &kp LBKT   &kp RBKT           &kp LT         &kp GT     &kp QMARK
                                  &trans     &trans      &trans     &trans
            >;
        };

        left_layer {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4    &trans  &kp N7  &kp N8  &kp N9  &trans
&trans  &kp N5  &kp N6  &kp N7  &kp N8    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans  &kp N9  &kp N0    &trans  &kp N1  &kp N2  &kp N3  &kp DOT
                        &trans  &trans    &trans  &kp N0
            >;
        };

        tri_layer {
            bindings = <
&bt BT_SEL 0  &kp F1  &kp F2   &kp F3   &kp F4     &kp DOWN  &kp RIGHT  &kp PG_UP  &kp HOME   &kp PSCRN
&bt BT_SEL 1  &kp F5  &kp F6   &kp F7   &kp F8     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp CAPS
&bt BT_SEL 2  &kp F9  &kp F10  &kp F11  &kp F12    &kp UP    &kp LEFT   &kp PG_DN  &kp END    &kp DEL
                               &trans   &trans     &trans    &trans
            >;
        };
    };
};
